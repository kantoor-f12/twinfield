<?php
namespace PhpTwinfield\Secure;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-08-20 at 09:00:06.
 */
class ConfigTest extends \PHPUnit\Framework\TestCase
{
    /**
     * @var Config
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Config;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers \PhpTwinfield\Secure\Config::setCredentials()
     * @todo   Implement testSetCredentials().
     */
    public function testSetCredentials()
    {
        $this->object->setCredentials('testUsername', 'testPassword', 'testOrganisation', 1001);
        $credentials = $this->object->getCredentials();
        
        $this->assertArrayHasKey('user', $credentials);
        $this->assertEquals($credentials['user'], 'testUsername');
    }

    /**
     * @covers \PhpTwinfield\Secure\Config::getCredentials()
     * @todo   Implement testGetCredentials().
     */
    public function testGetCredentials()
    {
        $credentials = $this->object->getCredentials();
        $this->assertTrue(is_array($credentials));
    }

    /**
     * @covers \PhpTwinfield\Secure\Config::getUsername()
     * @todo   Implement testGetUsername().
     */
    public function testGetUsername()
    {
        $this->object->setCredentials('testUsername', 'testPassword', 'testOrganisation', 1001);
        $this->assertSame($this->object->getUsername(), 'testUsername');
    }

    /**
     * @covers \PhpTwinfield\Secure\Config::getPassword()
     * @todo   Implement testGetPassword().
     */
    public function testGetPassword()
    {
        $this->object->setCredentials('testUsername', 'testPassword', 'testOrganisation', 1001);
        $this->assertSame($this->object->getPassword(), 'testPassword');
    }

    /**
     * @covers \PhpTwinfield\Secure\Config::getOrganisation()
     * @todo   Implement testGetOrganisation().
     */
    public function testGetOrganisation()
    {
        $this->object->setCredentials('testUsername', 'testPassword', 'testOrganisation', 1001);
        $this->assertSame($this->object->getOrganisation(), 'testOrganisation');
    }

    /**
     * @covers \PhpTwinfield\Secure\Config::getOffice()
     * @todo   Implement testGetOffice().
     */
    public function testGetOffice()
    {
        $this->object->setCredentials('testUsername', 'testPassword', 'testOrganisation', 1001);
        $this->assertSame($this->object->getOffice(), 1001);
    }

    /**
     * @covers \PhpTwinfield\Secure\Config::getClientID()
     * @todo   Implement testGetClientID().
     */
    public function testGetClientID()
    {
        $this->object->setOAuthParameters(
            'testClientToken',
            'testClientSecret',
            'testRedirectURL',
            'testOrganisation',
            'testOffice'
        );

        $this->assertSame($this->object->getClientToken(), 'testClientToken');
        $this->assertSame($this->object->getClientSecret(), 'testClientSecret');
        $this->assertSame($this->object->getRedirectURL(), 'testRedirectURL');
        $this->assertSame($this->object->getOrganisation(), 'testOrganisation');
        $this->assertSame($this->object->getOffice(), 'testOffice');
    }
}
